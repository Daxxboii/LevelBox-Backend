export declare function createError(rawError: ErrorConfig): AuthenticationError | InvalidRequestError | APIError | RateLimitError | IdempotencyError | NotFoundError | UserInputError | UnknownError;
declare type ErrorConfig = {
    name: string;
    type?: string;
    code?: string;
    docs_url?: string;
    help_link?: string;
    status?: number;
    statusText?: string;
    message: string;
    suggestion?: string;
};
/**
 * BaseError is the base error from which all other more specific errors derive.
 * Specifically for errors returned from REST API.
 */
declare class BaseError extends Error {
    name: string;
    message: string;
    type?: string;
    docs_url?: string;
    code?: string;
    status?: number;
    statusText?: string;
    suggestion?: string;
    constructor(raw: ErrorConfig);
}
export declare class InvalidRequestError extends BaseError {
}
export declare class UserInputError extends BaseError {
}
export declare class APIError extends BaseError {
}
export declare class AuthenticationError extends BaseError {
}
export declare class PermissionError extends BaseError {
}
export declare class RateLimitError extends BaseError {
}
export declare class ConnectionError extends BaseError {
}
export declare class IdempotencyError extends BaseError {
}
export declare class UnknownError extends BaseError {
}
export declare class NotFoundError extends BaseError {
}
export {};
