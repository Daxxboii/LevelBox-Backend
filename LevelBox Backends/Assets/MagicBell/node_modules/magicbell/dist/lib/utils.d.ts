export declare const hasOwn: (obj: any, prop: any) => any;
export declare const compose: <R>(fn1: (a: R) => R, ...fns: ((a: R) => R)[]) => (a: R) => R;
export declare function isString(value: any): boolean;
export declare function isBoolean(value: any): boolean;
export declare function isArray(value: any): boolean;
export declare function isStringArray(value: any): boolean;
export declare function isNumber(value: any): boolean;
export declare function isObject(value: any): boolean;
export declare function compact(obj: Record<string, unknown>, dropEmptyString?: boolean): {};
export declare function uuid4(): string;
export declare function sleep(ms: number): Promise<unknown>;
export declare function joinAnd(...parts: any[]): string;
export declare function joinOr(...parts: any[]): string;
export declare function joinUrlSegments(...segments: any[]): string;
